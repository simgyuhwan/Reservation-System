spring:
  datasource:
    url: jdbc:mysql://${DB_URL}:${DB_PORT}/${DB_TABLE}?serverTimezone=Asia/Seoul
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${DB_ID}
    password: ${DB_PW}
  jpa:
    defer-datasource-initialization: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
    generate-ddl: true
    database: mysql
    database-platform: org.hibernate.dialect.MySQL57Dialect

  # Redis
  data:
    redis:
      cluster:
        nodes:
          - ${REDIS-1:localhost}:6379
          - ${REDIS-2:localhost}:6380
          - ${REDIS-3:localhost}:6381

  #kafka
  cloud:
    stream:
      kafka:
        binder:
          brokers: ${KAFKA:localhost}:9092
      function:
        definition: performanceCreatedConsumer;performanceUpdatedConsumer;reservationApplyComplete;
      #bindings
      bindings:
        # performance created event consumer
        performanceCreatedConsumer-in-0:
          destination: performance-service.performance.created
          group: performance_created
          consumer:
            maxAttempts: 3
            backOffInitialInterval: 100
        # performance created event consumer result
        performanceCreatedConsumer-out-0:
          destination: reservation-service.performance.created.result

        # performance updated event consumer
        performanceUpdatedConsumer-in-0:
          destination: performance-service.performance.updated
          group: performance_updated
          consumer:
            maxAttempts: 3
            backOffInitialInterval: 100

        # performance updated event consumer result
        performanceUpdatedConsumer-out-0:
          destination: reservation-service.performance.updated.result

        # publish reservation apply event
        reservationApplyEvent-out-0:
          destination: reservation-service.reservation-apply

        reservationApplyComplete-in-0:
          destination: reservation-apply.complete
          group: reservation-apply

        reservationCancelRequest-out-0:
          destination: reservation-cancel-request

#loging
logging:
  level:
    org:
      hibernate:
        SQL: DEBUG