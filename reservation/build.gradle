buildscript {
    ext {
        querydslVersion = '5.0.0'
        springVersion = '3.0.6'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("com.querydsl:querydsl-apt:${querydslVersion}")
        classpath("com.querydsl:querydsl-jpa:${querydslVersion}")
    }
}

plugins {
    id 'groovy'
    id 'org.springframework.boot' version '3.0.6'
    id 'io.spring.dependency-management' version '1.1.0'
}

bootJar.enabled = false

allprojects {
    group = 'com.sim'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '17'

    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.springframework.boot'

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

    tasks.named('test') {
        useJUnitPlatform()
    }
}

def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
    main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile).configureEach {
    options.generatedSourceOutputDirectory.set(file(querydslDir))
}

clean.doLast {
    file(querydslDir).deleteDir()
}


project("boot") {
    bootJar { enabled = false }
    jar { enabled = true }
}

project("boot:boot-api") {
    dependencies {
        implementation(project(":data:data-reservation"))
    }
}

project("data") {
    bootJar { enabled = false }
    jar { enabled = true }
}

project("data:data-reservation") {
    bootJar { enabled = false }
    jar { enabled = true }
}
